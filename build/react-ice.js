(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"./src/react-ice.js":[function(require,module,exports){
var comm;

var ReactIceMixin = {
  getInitialState: function() {
    return updateInitialState();
  },
  componentWillUnmount: function() {
    comm.leave();
  },
  ic_initiate: function(apiKey) {
    comm = new Icecomm(apiKey);
    var _this = this;

    comm.on('local', function(options) {
      _this._ic_updateIcecommState('local', options);
    });
    comm.on('connected', function(peer) {
      console.log(_this);
      _this._ic_updateIcecommState('connected', peer);
    });

    comm.on('disconnect', function(peer) {
      _this._ic_updateIcecommState('disconnect', peer);
    });

  },
  ic_connect: function(room) {
    comm.connect(room);
  },
  ic_leave: function() {
    comm.leave();
  },
  _ic_updateIcecommState: function(event, value) {
    var state = this.state;
    state.icecomm = updateIcecommState(this.state.icecomm, event, value);
    this.setState(state);
  }
};

function updateInitialState() {
  var state = this.state || {};
  state.icecomm = {};
  return state;
}

function updateIcecommState(icecommState, event, value) {
  if (event === 'connected') {
    icecommState.peers = icecommState.peers || [];
    value = addGetVideo(value);
    icecommState.peers.push(value);
  }
  if (event === 'local') {
    value = addGetVideo(value);
    icecommState.local = value;
  }
  if (event === 'disconnect' && icecommState.peers) {
    var peerIndex = icecommState.peers.indexOf(value);
    icecommState.peers.splice(peerIndex, 1);
  }

  return icecommState;
}

function addGetVideo(peer) {
  peer.getVideo = function() {
    return (React.createElement("video", {src: peer.stream, autoPlay: true, muted: true}));
  }
  return peer;
}

window.ReactIceMixin = ReactIceMixin;

},{}]},{},["./src/react-ice.js"])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIvVXNlcnMvWmFpL0Rlc2t0b3AvTXlQcm9qZWN0cy9pY2Vjb21tL3JlYWN0LWljZS9zcmMvcmVhY3QtaWNlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUEsSUFBSSxJQUFJLENBQUM7O0FBRVQsSUFBSSxhQUFhLEdBQUc7RUFDbEIsZUFBZSxFQUFFLFdBQVc7SUFDMUIsT0FBTyxrQkFBa0IsRUFBRSxDQUFDO0dBQzdCO0VBQ0Qsb0JBQW9CLEVBQUUsV0FBVztJQUMvQixJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7R0FDZDtFQUNELFdBQVcsRUFBRSxTQUFTLE1BQU0sRUFBRTtJQUM1QixJQUFJLEdBQUcsSUFBSSxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDL0IsSUFBSSxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUM7O0lBRWpCLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLFNBQVMsT0FBTyxFQUFFO01BQ2pDLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7S0FDaEQsQ0FBQyxDQUFDO0lBQ0gsSUFBSSxDQUFDLEVBQUUsQ0FBQyxXQUFXLEVBQUUsU0FBUyxJQUFJLEVBQUU7TUFDbEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztNQUNuQixLQUFLLENBQUMsc0JBQXNCLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3RELEtBQUssQ0FBQyxDQUFDOztJQUVILElBQUksQ0FBQyxFQUFFLENBQUMsWUFBWSxFQUFFLFNBQVMsSUFBSSxFQUFFO01BQ25DLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDdkQsS0FBSyxDQUFDLENBQUM7O0dBRUo7RUFDRCxVQUFVLEVBQUUsU0FBUyxJQUFJLEVBQUU7SUFDekIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztHQUNwQjtFQUNELFFBQVEsRUFBRSxXQUFXO0lBQ25CLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztHQUNkO0VBQ0Qsc0JBQXNCLEVBQUUsU0FBUyxLQUFLLEVBQUUsS0FBSyxFQUFFO0lBQzdDLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDdkIsS0FBSyxDQUFDLE9BQU8sR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDckUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztHQUN0QjtBQUNILENBQUMsQ0FBQzs7QUFFRixTQUFTLGtCQUFrQixHQUFHO0VBQzVCLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDO0VBQzdCLEtBQUssQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDO0VBQ25CLE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQzs7QUFFRCxTQUFTLGtCQUFrQixDQUFDLFlBQVksRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFO0VBQ3RELElBQUksS0FBSyxLQUFLLFdBQVcsRUFBRTtJQUN6QixZQUFZLENBQUMsS0FBSyxHQUFHLFlBQVksQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDO0lBQzlDLEtBQUssR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0IsWUFBWSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7R0FDaEM7RUFDRCxJQUFJLEtBQUssS0FBSyxPQUFPLEVBQUU7SUFDckIsS0FBSyxHQUFHLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQixZQUFZLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztHQUM1QjtFQUNELElBQUksS0FBSyxLQUFLLFlBQVksSUFBSSxZQUFZLENBQUMsS0FBSyxFQUFFO0lBQ2hELElBQUksU0FBUyxHQUFHLFlBQVksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2xELFlBQVksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUM1QyxHQUFHOztFQUVELE9BQU8sWUFBWSxDQUFDO0FBQ3RCLENBQUM7O0FBRUQsU0FBUyxXQUFXLENBQUMsSUFBSSxFQUFFO0VBQ3pCLElBQUksQ0FBQyxRQUFRLEdBQUcsV0FBVztJQUN6QixRQUFRLG9CQUFBLE9BQU0sRUFBQSxDQUFBLENBQUMsR0FBQSxFQUFHLENBQUUsSUFBSSxDQUFDLE1BQU0sRUFBQyxDQUFDLFFBQUEsRUFBQSxFQUFBLENBQUMsS0FBQSxFQUFDLENBQVEsQ0FBQSxFQUFFO0dBQzlDO0VBQ0QsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDOztBQUVELE1BQU0sQ0FBQyxhQUFhLEdBQUcsYUFBYSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJ2YXIgY29tbTtcblxudmFyIFJlYWN0SWNlTWl4aW4gPSB7XG4gIGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHVwZGF0ZUluaXRpYWxTdGF0ZSgpO1xuICB9LFxuICBjb21wb25lbnRXaWxsVW5tb3VudDogZnVuY3Rpb24oKSB7XG4gICAgY29tbS5sZWF2ZSgpO1xuICB9LFxuICBpY19pbml0aWF0ZTogZnVuY3Rpb24oYXBpS2V5KSB7XG4gICAgY29tbSA9IG5ldyBJY2Vjb21tKGFwaUtleSk7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIGNvbW0ub24oJ2xvY2FsJywgZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgX3RoaXMuX2ljX3VwZGF0ZUljZWNvbW1TdGF0ZSgnbG9jYWwnLCBvcHRpb25zKTtcbiAgICB9KTtcbiAgICBjb21tLm9uKCdjb25uZWN0ZWQnLCBmdW5jdGlvbihwZWVyKSB7XG4gICAgICBjb25zb2xlLmxvZyhfdGhpcyk7XG4gICAgICBfdGhpcy5faWNfdXBkYXRlSWNlY29tbVN0YXRlKCdjb25uZWN0ZWQnLCBwZWVyKTtcbiAgICB9KTtcblxuICAgIGNvbW0ub24oJ2Rpc2Nvbm5lY3QnLCBmdW5jdGlvbihwZWVyKSB7XG4gICAgICBfdGhpcy5faWNfdXBkYXRlSWNlY29tbVN0YXRlKCdkaXNjb25uZWN0JywgcGVlcik7XG4gICAgfSk7XG5cbiAgfSxcbiAgaWNfY29ubmVjdDogZnVuY3Rpb24ocm9vbSkge1xuICAgIGNvbW0uY29ubmVjdChyb29tKTtcbiAgfSxcbiAgaWNfbGVhdmU6IGZ1bmN0aW9uKCkge1xuICAgIGNvbW0ubGVhdmUoKTtcbiAgfSxcbiAgX2ljX3VwZGF0ZUljZWNvbW1TdGF0ZTogZnVuY3Rpb24oZXZlbnQsIHZhbHVlKSB7XG4gICAgdmFyIHN0YXRlID0gdGhpcy5zdGF0ZTtcbiAgICBzdGF0ZS5pY2Vjb21tID0gdXBkYXRlSWNlY29tbVN0YXRlKHRoaXMuc3RhdGUuaWNlY29tbSwgZXZlbnQsIHZhbHVlKTtcbiAgICB0aGlzLnNldFN0YXRlKHN0YXRlKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gdXBkYXRlSW5pdGlhbFN0YXRlKCkge1xuICB2YXIgc3RhdGUgPSB0aGlzLnN0YXRlIHx8IHt9O1xuICBzdGF0ZS5pY2Vjb21tID0ge307XG4gIHJldHVybiBzdGF0ZTtcbn1cblxuZnVuY3Rpb24gdXBkYXRlSWNlY29tbVN0YXRlKGljZWNvbW1TdGF0ZSwgZXZlbnQsIHZhbHVlKSB7XG4gIGlmIChldmVudCA9PT0gJ2Nvbm5lY3RlZCcpIHtcbiAgICBpY2Vjb21tU3RhdGUucGVlcnMgPSBpY2Vjb21tU3RhdGUucGVlcnMgfHwgW107XG4gICAgdmFsdWUgPSBhZGRHZXRWaWRlbyh2YWx1ZSk7XG4gICAgaWNlY29tbVN0YXRlLnBlZXJzLnB1c2godmFsdWUpO1xuICB9XG4gIGlmIChldmVudCA9PT0gJ2xvY2FsJykge1xuICAgIHZhbHVlID0gYWRkR2V0VmlkZW8odmFsdWUpO1xuICAgIGljZWNvbW1TdGF0ZS5sb2NhbCA9IHZhbHVlO1xuICB9XG4gIGlmIChldmVudCA9PT0gJ2Rpc2Nvbm5lY3QnICYmIGljZWNvbW1TdGF0ZS5wZWVycykge1xuICAgIHZhciBwZWVySW5kZXggPSBpY2Vjb21tU3RhdGUucGVlcnMuaW5kZXhPZih2YWx1ZSk7XG4gICAgaWNlY29tbVN0YXRlLnBlZXJzLnNwbGljZShwZWVySW5kZXgsIDEpO1xuICB9XG5cbiAgcmV0dXJuIGljZWNvbW1TdGF0ZTtcbn1cblxuZnVuY3Rpb24gYWRkR2V0VmlkZW8ocGVlcikge1xuICBwZWVyLmdldFZpZGVvID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuICg8dmlkZW8gc3JjPXtwZWVyLnN0cmVhbX0gYXV0b1BsYXkgbXV0ZWQ+PC92aWRlbz4pO1xuICB9XG4gIHJldHVybiBwZWVyO1xufVxuXG53aW5kb3cuUmVhY3RJY2VNaXhpbiA9IFJlYWN0SWNlTWl4aW47Il19
